---
import ArticleCard from "../../components/ui/ArticleCard.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../../components/layout/BaseLayout.astro";
import Categories from "../../components/shared/Categories.astro";
import BaseHero from "../../components/shared/BaseHero.astro";
import Container from "../../components/ui/Container.astro";
import ContentList from "../../components/shared/ContentList.astro";

type Gist = CollectionEntry<"gists">;

const gists = await getCollection("gists", ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

const categories = [...new Set(gists.map((note: Gist) => note.data.category))];
const sortedGists = gists.sort(
  (a: Gist, b: Gist) =>
    b.data.publishedAt.getTime() - a.data.publishedAt.getTime()
);
---

<BaseLayout
  title="Gists"
  description="Short writeups and methods I want to share with you"
>
  <Container>
    <BaseHero title="Gists" description="Smaller blog posts or code snippets" />

    <Categories
      categories={categories}
      currentPath={Astro.url.pathname}
      basePath="gists"
    />

    <ContentList>
      {
        sortedGists.map((gist) => (
          <ArticleCard
            title={gist.data.title}
            description={gist.data.description}
            url={`/gists/${gist.id}`}
            date={gist.data.publishedAt}
          />
        ))
      }
    </ContentList>
  </Container>
</BaseLayout>
